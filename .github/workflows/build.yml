name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: banque_test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..10}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is ready" && exit 0
            echo "Waiting for MySQL..."
            sleep 5
          done
          echo "MySQL did not become ready in time!" && exit 1

      - name: Initialize database schema for `banque`
        run: |
          echo "Setting up schema 'banque'..."
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS banque;"
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_PASSWORD }} banque < script/dumpSQL.sql

      - name: Initialize database schema for `banque_test`
        run: |
          echo "Setting up schema 'banque_test'..."
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS banque_test;"
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_PASSWORD }} banque_test < script/dumpSQL_JUnitTest.sql

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          DB_URL: jdbc:mysql://127.0.0.1:3306/banque_test
          DB_USER: root
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=DJLGabJean_BUT3_GR5

